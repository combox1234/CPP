#include <iostream>
#include <string>

using namespace std;

class Node {
public:
    string data;
    Node* next;
    Node* prev;
    Node(string text) {
        data = text;
        next = NULL;
        prev = NULL;
    }
};
class Texteditor {
private:
    Node* head;
    Node* tail;
public:
    Texteditor() {
        head = NULL;
        tail = NULL;
    }
    void insertText(string text) { // a. Insert text
        Node* newNode = new Node(text);
        if (head == NULL) {
            head = newNode;
            tail = newNode;
        } else {
            tail->next = newNode;
            newNode->prev = tail;
            tail = newNode;
        }
    }
    void del(string text) { // b. Delete text
        Node* temp = head;
        while (temp != NULL) {
            if (temp->data == text) {
                if (temp->prev != NULL) {
                    temp->prev->next = temp->next;
                } else {
                    head = temp->next;
                }
                if (temp->next != NULL) {
                    temp->next->prev = temp->prev;
                } else {
                    tail = temp->prev;
                }
                delete temp;
                cout << "Deleted Successfully" << endl;
                return;
            }
            temp = temp->next;
        }
        cout << "text not found" << endl;
    }
    void show() {//display 
        Node* temp = head;
        while (temp != NULL) {
            cout << temp->data << " ";
            temp = temp->next;
        }
        cout << endl;
    }

    // d. Search text
    bool searchText(string text) {
        Node* temp = head;
        while (temp != NULL) {
            if (temp->data == text) {
                cout << temp -> data;
                return true;
            }
            temp = temp->next;
        }
        return false;
    }
    void addposition(int posi){
        
    }
    
    void rev() {//rev print
        Node* temp = tail;
        while (temp != NULL) {
            cout << temp->data << "\t";
            temp = temp->prev;
        }
    }
};
int main() {
    TextEditor editor;
    int posi;
    while (true) {
        cout << "Text Editor Menu:" << endl;
        cout << "1. Insert text" << endl;
        cout << "2. Delete text" << endl;
        cout << "3. Display text" << endl;
        cout << "4. Search text" << endl;
        cout << "5. Print text in reverse" << endl;
        cout << "6. Exit" << endl;
        int choice;
        cout << "Enter your choice: ";
        cin >> choice;
        switch (choice) {
            case 1: {
                string text;
                cout << "Enter the text to insert: ";
                cin.ignore();
                getline(cin, text);
                editor.insertText(text);
                break;
            }
            case 2: {
                string text;
                cout << "Enter the text to delete: ";
                cin.ignore();
                getline(cin, text);
                editor.del(text);
                break;
            }
            case 3:
                cout << "Enter at what position: ";
                cin>>posi;
                editor.addposition(posi);
                break;
            case 4:
                editor.displayText();
                break;
            case 5: {
                string text;
                cout << "Enter the text to search: ";
                cin.ignore();
                getline(cin, text);
                if (editor.searchText(text)) {
                    cout << "Text found." << endl;
                } else {
                    cout << "Text not found." << endl;
                }
                break;
            }
            case 6:
                editor.rev();
                break;
            case 7:
                return 0;
            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    }

    return 0;
}
